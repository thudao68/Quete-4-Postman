{
  "collection": {
    "_": {
      "postman_id": "958acb85-89de-4259-a8a3-0878dd645e89"
    },
    "item": [
      {
        "id": "06660074-c04d-4fad-992e-32e7cc123ea2",
        "name": "Request Methods",
        "description": {
          "content": "HTTP has multiple request \"verbs\", such as `GET`, `PUT`, `POST`, `DELETE`,\n`PATCH`, `HEAD`, etc. \n\nAn HTTP Method (verb) defines how a request should be interpreted by a server. \nThe endpoints in this section demonstrate various HTTP Verbs. Postman supports \nall the HTTP Verbs, including some rarely used ones, such as `PROPFIND`, `UNLINK`, \netc.\n\nFor details about HTTP Verbs, refer to [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9)\n",
          "type": "text/plain"
        },
        "item": [
          {
            "id": "3a41a11f-020b-4de6-b320-ed3a0803d769",
            "name": "GET Request",
            "request": {
              "description": {
                "content": "The HTTP `GET` request method is meant to retrieve data from a server. The data\nis identified by a unique URI (Uniform Resource Identifier). \n\nA `GET` request can pass parameters to the server using \"Query String \nParameters\". For example, in the following request,\n\n> http://example.com/hi/there?hand=wave\n\nThe parameter \"hand\" has the value \"wave\".\n\nThis endpoint echoes the HTTP headers, request parameters and the complete\nURI requested.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "get"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "foo1",
                    "value": "bar1"
                  },
                  {
                    "key": "foo2",
                    "value": "bar2"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "4f336625-7ada-4a91-82b0-e40e03f765ee",
                "name": "GET Request Woops",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "get"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "foo1",
                        "value": "bar1"
                      },
                      {
                        "key": "foo2",
                        "value": "bar2"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "key": "Date",
                    "value": "Tue, 11 Jun 2019 10:43:13 GMT"
                  },
                  {
                    "key": "ETag",
                    "value": "W/\"161-aLhNcsGArlgLSKbxPqfBW3viHPI\""
                  },
                  {
                    "key": "Server",
                    "value": "nginx"
                  },
                  {
                    "key": "set-cookie",
                    "value": "sails.sid=s%3AGz-wblZgXE8FCDq7aJpx_tUgZUcG3Nsw.LdNEN8L0C7nGWkvGLwvdw6R2s6Syjr%2FzkvyevA8qR0c; Path=/; HttpOnly"
                  },
                  {
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "key": "Content-Length",
                    "value": "249"
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive"
                  }
                ],
                "body": "{\n    \"args\": {\n        \"foo1\": \"bar1\",\n        \"foo2\": \"bar2\"\n    },\n    \"headers\": {\n        \"x-forwarded-proto\": \"https\",\n        \"host\": \"postman-echo.com\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate\",\n        \"cache-control\": \"no-cache\",\n        \"postman-token\": \"5c27cd7d-6b16-4e5a-a0ef-191c9a3a275f\",\n        \"user-agent\": \"PostmanRuntime/7.6.1\",\n        \"x-forwarded-port\": \"443\"\n    },\n    \"url\": \"https://postman-echo.com/get?foo1=bar1&foo2=bar2\"\n}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "ff8bf25b-9785-4914-abd6-22e8d444eead",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with request queries\", function () {",
                    "    pm.response.to.have.jsonBody('args.foo1', 'bar1')",
                    "        .and.have.jsonBody('args.foo2', 'bar2');",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "c6840165-8110-4529-a5fb-e94356b96d8f",
            "name": "POST Raw Text",
            "request": {
              "description": {
                "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "post"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "This is expected to be sent back as part of response body."
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0080a576-5f07-40fe-acd0-ac4f6430449f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with request body\", function () {",
                    "    pm.response.to.have.jsonBody('data', ",
                    "        'This is expected to be sent back as part of response body.');",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "5a308869-5956-4fa0-b10b-7336516ffbca",
            "name": "POST Form Data",
            "request": {
              "description": {
                "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested when data is sent as a form parameter.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "post"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "urlencoded",
                "urlencoded": [
                  {
                    "key": "foo1",
                    "value": "bar1"
                  },
                  {
                    "key": "foo2",
                    "value": "bar2"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "78597b3e-0181-4cdf-84c8-61fc31a0c1c8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with form data\", function () {",
                    "    pm.response.to.have.jsonBody('form.foo1', 'bar1')",
                    "        .and.have.jsonBody('form.foo2', 'bar2');",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "f2b5baaf-c215-40e6-a781-cd1f26e11693",
            "name": "PUT Request",
            "request": {
              "description": {
                "content": "The HTTP `PUT` request method is similar to HTTP `POST`. It too is meant to \ntransfer data to a server (and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `PUT` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following \nraw HTTP request,\n\n> PUT /hi/there?hand=wave\n>\n> <request-body>\n\n\n",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "put"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "This is expected to be sent back as part of response body."
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4154c836-ef37-4b4f-8751-408cb14b5a3f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with form data\", function () {",
                    "    pm.response.to.have.jsonBody('data', ",
                    "        'This is expected to be sent back as part of response body.');",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "310be378-114a-4033-8922-9088dba1214e",
            "name": "PATCH Request",
            "request": {
              "description": {
                "content": "The HTTP `PATCH` method is used to update resources on a server. The exact\nuse of `PATCH` requests depends on the server in question. There are a number\nof server implementations which handle `PATCH` differently. Technically, \n`PATCH` supports both Query String parameters and a Request Body.\n\nThis endpoint accepts an HTTP `PATCH` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "patch"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "This is expected to be sent back as part of response body."
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "ad5f9475-bb62-4d4b-b164-8fca25f66ea9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with form data\", function () {",
                    "    pm.response.to.have.jsonBody('data', ",
                    "        'This is expected to be sent back as part of response body.');",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "bf771648-3941-44b4-8d5b-8ec16aae7ac0",
            "name": "DELETE Request",
            "request": {
              "description": {
                "content": "The HTTP `DELETE` method is used to delete resources on a server. The exact\nuse of `DELETE` requests depends on the server implementation. In general, \n`DELETE` requests support both, Query String parameters as well as a Request \nBody.\n\nThis endpoint accepts an HTTP `DELETE` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "delete"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "This is expected to be sent back as part of response body."
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f73ca44e-45e5-4295-aa82-185d079a5613",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with form data\", function () {",
                    "    pm.response.to.have.jsonBody('data', ",
                    "        'This is expected to be sent back as part of response body.');",
                    "});"
                  ]
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "020f5963-e13b-43c9-ba06-2e66165ddf31",
        "name": "Headers",
        "description": {
          "content": "The following set of endpoints allow one to see the headers being sent as part of a request and to get a custom set of headers as part of response.\n\nHTTP header fields provide required information about the request or response, or about the object sent in the message body. Both request headers and response headers can be controlled using these endpoints.",
          "type": "text/plain"
        },
        "item": [
          {
            "id": "fbc95dff-f986-4f97-8cf5-329731d53469",
            "name": "Request Headers",
            "request": {
              "description": {
                "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "headers"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "my-sample-header",
                  "value": "Lorem ipsum dolor sit amet"
                }
              ],
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "3b713255-29ea-4435-b380-ea71c6f8be21",
                "name": "my-sample-header",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "headers"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "my-sample-header",
                      "value": "Lorem ipsum dolor sit amet"
                    }
                  ],
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "342"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 31 Mar 2016 11:14:00 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\n    \"headers\": {\n        \"host\": \"echo.getpostman.com\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate, sdch\",\n        \"accept-language\": \"en-US,en;q=0.8\",\n        \"cache-control\": \"no-cache\",\n        \"my-sample-header\": \"Lorem ipsum dolor sit amet\",\n        \"postman-token\": \"3c8ea80b-f599-fba6-e0b4-a0910440e7b6\",\n        \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36\",\n        \"x-forwarded-port\": \"443\",\n        \"x-forwarded-proto\": \"https\"\n    }\n}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": true,
                    "session": true,
                    "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "cc213304-8c2c-4f7a-b2f5-6e38e2659e70",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "// we check to ensire that the headers we sent as request is returned as part of",
                    "// the response body. if you change the request headers, make sure to add them",
                    "// to the tests here",
                    "pm.test(\"sample request header should be returned in response body\", function () {",
                    "    pm.response.to.have.jsonBody('headers.my-sample-header', 'Lorem ipsum dolor sit amet');",
                    "});"
                  ],
                  "_lastExecutionId": "11499122-af3c-44d3-bcde-5229728bf895"
                }
              }
            ]
          },
          {
            "id": "2049318e-7d54-4d43-a8d6-d361859f11b5",
            "name": "Response Headers",
            "request": {
              "description": {
                "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "response-headers"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "foo1",
                    "value": "bar1"
                  },
                  {
                    "key": "foo2",
                    "value": "bar2"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "html"
                },
                "id": "2f090f36-c3d9-4813-b776-3e9d1c2538ee",
                "name": "Response headers",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "response-headers"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "Content-Type",
                        "value": "text/html"
                      },
                      {
                        "key": "test",
                        "value": "response_headers"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "71"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "text/html; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 31 Mar 2016 11:14:18 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  },
                  {
                    "name": "test",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "test",
                    "value": "response_headers"
                  }
                ],
                "body": "{\"Content-Type\":\"text/html\",\"test\":\"response_headers\"}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": true,
                    "session": true,
                    "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "310aff00-42a1-4fda-b397-33cfa38b15a7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has the headers sent as part of request query\", function () {",
                    "    pm.response.to.have.header('foo1', 'bar1')",
                    "        .and.have.header('foo2', 'bar2');",
                    "});",
                    "",
                    "pm.test(\"sample request param should be returned in response body\", function () {",
                    "    pm.response.to.have.jsonBody('foo1', 'bar1')",
                    "        .and.have.jsonBody('foo2', 'bar2');",
                    "});"
                  ],
                  "_lastExecutionId": "9a289b7d-725c-4d0a-acf0-dba31d0650e1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d9475753-8828-476b-a897-127918fad3b5",
        "name": "Authentication Methods",
        "item": [
          {
            "id": "7cc695e4-c084-4ff3-a872-d40fe7d43b92",
            "name": "Basic Auth",
            "request": {
              "description": {
                "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "basic-auth"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "basic",
                "basic": [
                  {
                    "type": "any",
                    "value": "postman",
                    "key": "username"
                  },
                  {
                    "type": "any",
                    "value": "password",
                    "key": "password"
                  },
                  {
                    "type": "any",
                    "value": false,
                    "key": "showPassword"
                  }
                ]
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "7db58640-35d5-4bcb-af7b-823d0fd0669e",
                "name": "200",
                "originalRequest": {
                  "description": {
                    "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "basic-auth"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "auth": {
                    "type": "basic",
                    "basic": [
                      {
                        "type": "any",
                        "value": "postman",
                        "key": "username"
                      },
                      {
                        "type": "any",
                        "value": "password",
                        "key": "password"
                      },
                      {
                        "type": "any",
                        "value": false,
                        "key": "showPassword"
                      }
                    ]
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "42"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Sat, 31 Oct 2015 06:38:25 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"authenticated\":true}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9a5e07c9-89ba-407c-87d0-c43a9ddd7bde",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json saying 'authenticated'\", function () {",
                    "    pm.response.to.have.jsonBody('authenticated', true);",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "5377f183-52e7-4e68-9a30-664096af35da",
            "name": "DigestAuth Success",
            "request": {
              "description": {
                "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "digest-auth"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
                }
              ],
              "method": "GET",
              "auth": {
                "type": "digest",
                "digest": [
                  {
                    "type": "any",
                    "value": "MD5",
                    "key": "algorithm"
                  },
                  {
                    "type": "any",
                    "value": "postman",
                    "key": "username"
                  },
                  {
                    "type": "any",
                    "value": "{{echo_digest_realm}}",
                    "key": "realm"
                  },
                  {
                    "type": "any",
                    "value": "password",
                    "key": "password"
                  },
                  {
                    "type": "any",
                    "value": "{{echo_digest_nonce}}",
                    "key": "nonce"
                  },
                  {
                    "type": "any",
                    "value": "",
                    "key": "nonceCount"
                  },
                  {
                    "type": "any",
                    "value": "",
                    "key": "clientNonce"
                  },
                  {
                    "type": "any",
                    "value": "",
                    "key": "opaque"
                  },
                  {
                    "type": "any",
                    "value": "",
                    "key": "qop"
                  }
                ]
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "39eda872-c62b-4cd0-810a-dff5400ac764",
                "name": "200",
                "originalRequest": {
                  "description": {
                    "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "digest-auth"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
                    }
                  ],
                  "method": "GET",
                  "auth": {
                    "type": "digest",
                    "digest": [
                      {
                        "type": "any",
                        "value": "MD5",
                        "key": "algorithm"
                      },
                      {
                        "type": "any",
                        "value": "postman",
                        "key": "username"
                      },
                      {
                        "type": "any",
                        "value": "{{echo_digest_realm}}",
                        "key": "realm"
                      },
                      {
                        "type": "any",
                        "value": "password",
                        "key": "password"
                      },
                      {
                        "type": "any",
                        "value": "{{echo_digest_nonce}}",
                        "key": "nonce"
                      },
                      {
                        "type": "any",
                        "value": "",
                        "key": "nonceCount"
                      },
                      {
                        "type": "any",
                        "value": "",
                        "key": "clientNonce"
                      },
                      {
                        "type": "any",
                        "value": "",
                        "key": "opaque"
                      },
                      {
                        "type": "any",
                        "value": "",
                        "key": "qop"
                      }
                    ]
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "42"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 29 Oct 2015 06:17:51 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"authenticated\":true}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3be62bf8-69f6-448e-9943-aa74eab55d7b",
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"response code is 200\"] = responseCode.code === 200;",
                    "tests[\"body contains authenticated\"] = responseBody.has(\"authenticated\");"
                  ]
                }
              }
            ]
          },
          {
            "id": "8f8bcdd1-3694-4690-9367-6df21fd6a7da",
            "name": "Hawk Auth",
            "request": {
              "description": {
                "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "auth",
                  "hawk"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "hawk",
                "hawk": [
                  {
                    "type": "any",
                    "value": "dh37fgj492je",
                    "key": "authId"
                  },
                  {
                    "type": "any",
                    "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                    "key": "authKey"
                  },
                  {
                    "type": "any",
                    "value": "sha256",
                    "key": "algorithm"
                  },
                  {
                    "type": "any",
                    "value": "",
                    "key": "user"
                  },
                  {
                    "type": "any",
                    "value": "RZKGNz",
                    "key": "nonce"
                  },
                  {
                    "type": "any",
                    "value": "",
                    "key": "timestamp"
                  }
                ]
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "7cd09ddc-c5a8-4722-8b5b-89456f45a8eb",
                "name": "Success",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "auth",
                      "hawk"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Authorization",
                      "key": "Authorization",
                      "value": "Hawk id=\"dh37fgj492je\", ts=\"1459422734\", nonce=\"XiwiCU\", mac=\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\""
                    }
                  ],
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 31 Mar 2016 11:12:16 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Server-Authorization",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server-Authorization",
                    "value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\""
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  },
                  {
                    "name": "transfer-encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "transfer-encoding",
                    "value": "chunked"
                  }
                ],
                "body": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
                "cookie": [
                  {
                    "name": "getpostmanlogin",
                    "expires": "2016-04-15T10:54:28.000Z",
                    "domain": ".getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": false,
                    "hostOnly": false,
                    "session": false,
                    "value": "yes"
                  },
                  {
                    "name": "postman.sid",
                    "expires": "2016-04-15T10:54:28.000Z",
                    "domain": ".getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": false,
                    "hostOnly": false,
                    "session": false,
                    "value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
                  },
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": true,
                    "session": true,
                    "value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7b8942a3-618f-4e90-9cff-940d5be665dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json saying passed 'status'\", function () {",
                    "    pm.response.to.have.jsonBody('status', 'pass');",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "4b2fb910-5209-405d-8aae-c242e3835bad",
            "name": "OAuth1.0 (verify signature)",
            "request": {
              "description": {
                "content": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "oauth1"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "oauth1",
                "oauth1": [
                  {
                    "type": "any",
                    "value": "RKCGzna7bv9YD57c",
                    "key": "consumerKey"
                  },
                  {
                    "type": "any",
                    "value": "D+EdQ-gs$-%@2Nu7",
                    "key": "consumerSecret"
                  },
                  {
                    "type": "any",
                    "value": "",
                    "key": "token"
                  },
                  {
                    "type": "any",
                    "value": "",
                    "key": "tokenSecret"
                  },
                  {
                    "type": "any",
                    "value": "HMAC-SHA1",
                    "key": "signatureMethod"
                  },
                  {
                    "type": "any",
                    "value": "",
                    "key": "timestamp"
                  },
                  {
                    "type": "any",
                    "value": "",
                    "key": "nonce"
                  },
                  {
                    "type": "any",
                    "value": "",
                    "key": "version"
                  },
                  {
                    "type": "any",
                    "value": "",
                    "key": "realm"
                  },
                  {
                    "type": "any",
                    "value": true,
                    "key": "addParamsToHeader"
                  },
                  {
                    "type": "any",
                    "value": false,
                    "key": "addEmptyParamsToSign"
                  }
                ]
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "301c5b08-24d0-426c-a945-78c2c0d1de4e",
                "name": "401",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "oauth1"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Authorization",
                      "key": "Authorization",
                      "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c_wrong\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121295\",oauth_nonce=\"8LTsU2\",oauth_version=\"1.0\",oauth_signature=\"tSUexpY%2B7EhSY7cFXiFN5EMx2zw%3D\""
                    }
                  ],
                  "method": "GET"
                },
                "status": "Unauthorized",
                "code": 401,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "536"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 25 Aug 2016 10:34:55 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"218-SGnurnTsu5qV5cCYWxsJlg\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.8.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  }
                ],
                "body": "{\"status\":\"fail\",\"message\":\"HMAC-SHA1 verification failed\",\"base_uri\":\"https://echo.getpostman.com/oauth1\",\"normalized_param_string\":\"oauth_consumer_key=RKCGzna7bv9YD57c_wrong&oauth_nonce=8LTsU2&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1472121295&oauth_version=1.0\",\"base_string\":\"GET&https%3A%2F%2Fecho.getpostman.com%2Foauth1&oauth_consumer_key%3DRKCGzna7bv9YD57c_wrong%26oauth_nonce%3D8LTsU2%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1472121295%26oauth_version%3D1.0\",\"signing_key\":\"D%2BEdQ-gs%24-%25%402Nu7&\"}",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "962022b7-af21-4fcd-b194-0ff35d1f8345",
                "name": "200",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "oauth1"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Authorization",
                      "key": "Authorization",
                      "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121261\",oauth_nonce=\"ki0RQW\",oauth_version=\"1.0\",oauth_signature=\"s0rK92Myxx7ceUBVzlMaxiiXU00%3D\""
                    }
                  ],
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "95"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 25 Aug 2016 10:34:23 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"4e-Cq3UhvpVSyl6R6204lPVIA\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.8.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  }
                ],
                "body": "{\"status\":\"pass\",\"message\":\"OAuth-1.0a signature verification was successful\"}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "d2f9482a-cb36-4b6d-8c87-a39fcd586e87",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json saying passed 'status'\", function () {",
                    "    pm.response.to.have.jsonBody('status', 'pass');",
                    "});"
                  ]
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9c89fa7c-51c8-42ef-afd8-ac3fbffd11b9",
        "name": "Cookie Manipulation",
        "description": {
          "content": "The cookie related endpoints allow one to get, set and delete simple cookies.\n\nCookies are small snippets of information that is stored in the browser and sent back to the server with every subsequent requests in order to store useful information between requests.\nIf you want to know more about cookies, read the [HTTP Cookie](https://en.wikipedia.org/wiki/HTTP_cookie) article on wikipedia.",
          "type": "text/plain"
        },
        "item": [
          {
            "id": "3e3d94bc-4300-4b23-a4c8-ecb9c354a4b6",
            "name": "Set Cookies",
            "request": {
              "description": {
                "content": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "cookies",
                  "set"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "foo1",
                    "value": "bar1"
                  },
                  {
                    "key": "foo2",
                    "value": "bar2"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "29518de6-e52a-4e60-a7aa-eb5f227e1df1",
                "name": "Cookies",
                "originalRequest": {
                  "description": {
                    "content": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "cookies",
                      "set"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "foo1",
                        "value": "bar1"
                      },
                      {
                        "key": "foo2",
                        "value": "bar2"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "51"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 29 Oct 2015 06:15:28 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"cookies\":{\"foo1\":\"bar\",\"foo2\":\"bar\"}}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c856f9a3-58e2-4acc-a651-166f0352e02b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('response should be 200 or 302', function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                    "});",
                    "",
                    "pm.test('the \"foo1\" cookie has correct value', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.have.property('foo1', 'bar1');",
                    "});",
                    "",
                    "pm.test('the \"foo2\" cookie has correct value', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.have.property('foo2', 'bar2');",
                    "});",
                    "",
                    "// response code could be either a 200 or a redirection based on the settings of ",
                    "// the http client. hence we need to handle both cases",
                    "pm.test('response body should be valid', function () {",
                    "    if (pm.response.code === 200) {",
                    "        pm.response.to.have.jsonBody('cookies.foo1', 'bar1')",
                    "            .and.have.jsonBody('cookies.foo2', 'bar2');",
                    "    }",
                    "    else {",
                    "        pm.response.to.have.body('Found. Redirecting to /cookies');",
                    "    }",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "1825c672-4e4b-40ca-89e5-75b9fcfc0ae7",
            "name": "Get Cookies",
            "request": {
              "description": {
                "content": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "cookies"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "56b2f47c-e2f9-48bc-b059-32b258471310",
                "name": "Cookies",
                "originalRequest": {
                  "description": {
                    "content": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "cookies"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "46"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 29 Oct 2015 06:16:29 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"cookies\":{\"foo2\":\"bar\"}}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2504b603-71ee-4f40-9e35-471cc78e9218",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('the \"foo1\" cookie has correct value', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.have.property('foo1', 'bar1');",
                    "});",
                    "",
                    "pm.test('the \"foo2\" cookie has correct value', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.have.property('foo2', 'bar2');",
                    "});",
                    "",
                    "pm.test('response body should be valid', function () {",
                    "    pm.response.to.have.jsonBody('cookies.foo1', 'bar1');",
                    "    pm.response.to.have.jsonBody('cookies.foo2', 'bar2');",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "dc7a1ec5-cd55-4aaa-92e9-4226ef7b2933",
            "name": "Delete Cookies",
            "request": {
              "description": {
                "content": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "cookies",
                  "delete"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "foo1",
                    "value": null
                  },
                  {
                    "key": "foo2",
                    "value": null
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "a31114ea-64ff-4cea-a635-3efd316f6e77",
                "name": "Cookies Response",
                "originalRequest": {
                  "description": {
                    "content": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "cookies",
                      "delete"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "foo1",
                        "value": null
                      },
                      {
                        "key": "foo2",
                        "value": null
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "46"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 29 Oct 2015 06:16:00 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"cookies\":{\"foo2\":\"bar\"}}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3b59ef81-7b99-42b9-a95c-cddc90a859a9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('response should be 200 or 302', function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                    "});",
                    "",
                    "pm.test('the \"foo1\" cookie should not be present', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.not.have.property('foo1');",
                    "});",
                    "",
                    "pm.test('the \"foo2\" cookie should not be present', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.not.have.property('foo2');",
                    "});",
                    "",
                    "// response code could be either a 200 or a redirection based on the settings of ",
                    "// the http client. hence we need to handle both cases",
                    "pm.test('response body should be valid', function () {",
                    "    if (pm.response.code === 200) {",
                    "        pm.response.to.not.have.jsonBody('cookies.foo1');",
                    "        pm.response.to.not.have.jsonBody('cookies.foo2');",
                    "    }",
                    "    else {",
                    "        pm.response.to.have.body('Found. Redirecting to /cookies');",
                    "    }",
                    "});"
                  ]
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bc83f6a0-a323-4bec-b4ce-ef3ff4f8ec8f",
        "name": "Utilities",
        "item": [
          {
            "id": "1adbe947-9fcb-40c5-b8ff-6cfef9b2bf67",
            "name": "Response Status Code",
            "request": {
              "description": {
                "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "status",
                  "200"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "7a72a818-14e0-4961-80e4-179cf64aa546",
                "name": "200",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "status",
                      "200"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "14"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 31 Mar 2016 11:58:47 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"e-1056260003\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"status\":200}",
                "cookie": [
                  {
                    "name": "getpostmanlogin",
                    "expires": "2016-04-15T11:14:58.000Z",
                    "domain": ".getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": false,
                    "hostOnly": false,
                    "session": false,
                    "value": "yes"
                  },
                  {
                    "name": "postman.sid",
                    "expires": "2016-04-15T11:14:58.000Z",
                    "domain": ".getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": false,
                    "hostOnly": false,
                    "session": false,
                    "value": "df0c0256028d7ec4d641f766104a9571a8e249685bbc667d7cee030bbf44d3209495c70c03248e31e678a93812591d5e12187a8e99bf6bc5e80c40903f6ff6226938f24e413c0ffa613a7372064ec44a8594e8d3ede6945e34394f369573feeebc4a73a3e24b8c9ac18a53704addb5fd3f71f1ede488ff551feb059e9c1fb208164814e45e0312c4df8ea6e83c26702f42ae634c6afbe82d57c857bbf5598b5527961c1c28688dc2580070a4389f0cf4ec0a179b5b9c11b2ecbaa5460d374065bf5c7a3add9505df0fa89acb9f227f05ed2d4c6b58c39d6d728bd49f6f323ae67d4a75882aa7682f5d6fc5b981ba411d94aa93970bfaefa1953a73e440d50d012b5f288975c888e2345ee7777e746fb5aed3a7b2dbc087c6456621aa78c24a3c17c5f96cf59844933249a352f631e2008cffac6faf06d0e253dcc01cf0067bf56c1fbc5ed61fec1861b60c5accf35ffc2e56154a113004fa1db9d7171c3af8fc063918554092f5"
                  },
                  {
                    "name": "_ga",
                    "expires": "2018-03-31T11:16:21.000Z",
                    "domain": ".echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": false,
                    "hostOnly": false,
                    "session": false,
                    "value": "GA1.3.1703443399.1459422978"
                  },
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": true,
                    "session": true,
                    "value": "s%3AvuHU0EKeDbyNjVrEc7U30dMPzVu8CRaD.GOV1H9olcVzXqrwqP%2BC%2B6MVj2UczXivcN00jgPoDYfs"
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "82a0c633-a083-43dc-b3a5-978f8c3738ea",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has valid json body\", function () {",
                    "    pm.response.to.have.jsonBody('status');",
                    "});",
                    "",
                    "// additional sanity tests",
                    "pm.test(\"status in response body must match the one in request\", function () {",
                    "    pm.response.to.have.jsonBody('status', Number(_.get(pm.request, 'url.path[1]')));",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "7f64b958-0e38-4cec-b0f3-14146179eb50",
            "name": "Streamed Response",
            "request": {
              "description": {
                "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "stream",
                  "5"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b9c11850-3509-4fda-b3fb-fc91bba3f9f2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has chunked transfer encoding header\", function () {",
                    "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "f5a2cb4d-8969-4248-8f01-91e456584b55",
            "name": "Delay Response",
            "request": {
              "description": {
                "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "delay",
                  "2"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "5f1985aa-9748-4d40-b487-6249ae49f9bb",
                "name": "success-response",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "delay",
                      "3"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "13"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Mon, 02 Jan 2017 09:19:03 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"d-t/L/D5c0SDl+MoXtKdSVOg\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.10.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  }
                ],
                "body": "{\"delay\":\"3\"}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": "2038-01-18T21:44:07.000Z",
                    "domain": "echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "value": "s%3AYjUiFBtGiJVL2a-qzZQZ1DFlAMhgXN9O.WaAjRUV0OteZxwmhbNibuB7VKse068JJIh6PwLQUKmQ"
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c4f1c93b-5d97-4b84-b31d-9cd4fc16ad30",
                  "type": "text/javascript",
                  "exec": [
                    "var _ = require('lodash');",
                    "",
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has valid json body\", function () {",
                    "    pm.response.to.have.jsonBody('delay');",
                    "});",
                    "",
                    "// additional sanity tests",
                    "pm.test(\"request must have a valid delay\", function () {",
                    "    pm.expect(Number(_.get(pm.request, 'url.path[1]'))).to.be.above(0).and.below(10);",
                    "});",
                    "pm.test(\"response should take more time than the delay specified\", function () {",
                    "    pm.expect(pm.response.responseTime).to.be.above(Number(_.get(pm.request, 'url.path[1]')));",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "5f449db2-b86c-4a9b-b852-4b4193eb2805",
            "name": "Get UTF8 Encoded Response",
            "request": {
              "description": {
                "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "encoding",
                  "utf8"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2e31ceba-514a-4872-98ad-a7765c58ffa4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has charset in content-type header\", function () {",
                    "    pm.response.to.have.header('content-type', 'text/html; charset=utf-8');",
                    "});",
                    "",
                    "pm.test(\"response has chunked transfer encoding header\", function () {",
                    "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "bd45839e-25e4-490f-972c-6a0a73801a64",
            "name": "GZip Compressed Response",
            "request": {
              "description": {
                "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "gzip"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "32619f02-077d-4b95-be34-144c890899e3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has valid json body\", function () {",
                    "    pm.response.to.have.jsonBody('gzipped', true);",
                    "});",
                    "",
                    "pm.test('response headers should indicate valid content encoding', function  () {",
                    "    pm.response.to.have.header('content-encoding', 'gzip')",
                    "        .and.have.header('content-type', 'application/json');",
                    "});",
                    "",
                    "pm.test('requesting http client should accept compressed response', function () {",
                    "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                    "        .and.to.match(/.*gzip.*/);",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "a2ae9583-baf0-4f0d-a107-323841dfbef5",
            "name": "Deflate Compressed Response",
            "request": {
              "description": {
                "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "deflate"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8defac88-797d-48bc-8804-4e2d8cdb93cc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has valid json body\", function () {",
                    "    pm.response.to.have.jsonBody('deflated', true);",
                    "});",
                    "",
                    "pm.test('response headers should indicate valid content encoding', function  () {",
                    "    pm.response.to.have.header('content-encoding', 'deflate')",
                    "        .and.have.header('content-type', 'application/json');",
                    "});",
                    "",
                    "pm.test('requesting http client should accept compressed response', function () {",
                    "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                    "        .and.to.match(/.*deflate.*/);",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "345d95d2-2548-43de-84f5-a2524dd3c53c",
            "name": "IP address in JSON format",
            "request": {
              "description": {
                "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "ip"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "527620cb-85d6-4a07-9aac-8cda39023d1b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has valid json body\", function () {",
                    "    pm.response.to.have.jsonBody('ip');",
                    "});",
                    "",
                    "pm.test(\"response must return a valid ip address\", function () {",
                    "    pm.expect(pm.response.json().ip).to",
                    "        // a really gnarly regular expression to ensure that ip address is in correct format",
                    "        .match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);",
                    "});"
                  ]
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "52f1c017-f536-428d-a3e2-d2b88db1b33a",
        "name": "Utilities / Date and Time",
        "description": {
          "content": "A set of `/time/*` mounted requests to perform date-time manipulations, among other operations.\n",
          "type": "text/plain"
        },
        "item": [
          {
            "id": "c3ba7c0e-5673-4475-915e-ae07e6e73435",
            "name": "Current UTC time",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/now` to return the current timestamp as a UTC string.\n\n```\nFri, 04 Nov 2016 09:00:46 GMT\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "now"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "html"
                },
                "id": "b8f4d2a9-0c5e-47e9-89fc-3ff213a529c6",
                "name": "time as text",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "time",
                      "now"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "49"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "text/html; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Wed, 11 Jan 2017 10:27:12 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"1d-2jJhkzratfVX9VZ0+raHbw\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.10.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "set-cookie",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "set-cookie",
                    "value": "sails.sid=s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig; Path=/; HttpOnly"
                  }
                ],
                "body": "Wed, 11 Jan 2017 10:27:12 GMT",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": "2038-01-18T21:44:07.000Z",
                    "domain": "postman-echo.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "value": "s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig"
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "985da53c-e1fb-4b01-9332-1d37f2a20f82",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response time matches server response 'date' header\", function () {",
                    "    pm.expect(pm.response.text()).to.eql(pm.response.headers.get('date'))",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "25cfb3dc-0b62-4715-a517-5dc2d47e621c",
            "name": "Timestamp validity",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/valid` to determine the validity of the timestamp, (current by default).\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a valid key to indicate the result. The response code is `200`.\n\n```\n{\n  valid: true/false\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "valid"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "481d202e-a487-40bb-a84f-7a96fe98cff1",
                "name": "Invalid Timestamp",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "time",
                      "valid"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "timestamp",
                        "value": "2016-10-10"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "15"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Wed, 11 Jan 2017 10:27:53 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"f-/i9mO/upK91ZtL0BkKFGtw\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.10.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "set-cookie",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "set-cookie",
                    "value": "sails.sid=s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI; Path=/; HttpOnly"
                  }
                ],
                "body": "{\"valid\":false}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": "2038-01-18T21:44:07.000Z",
                    "domain": "postman-echo.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "value": "s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI"
                  }
                ]
              },
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "9435b58b-9550-4033-8e80-ab92ecc25fe2",
                "name": "Valid Timestamp",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "time",
                      "valid"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "timestamp",
                        "value": "2016-10-10"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "14"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Wed, 11 Jan 2017 10:27:33 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"e-OYN7L87J1Ba9oy5mJE2kcA\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.10.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "set-cookie",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "set-cookie",
                    "value": "sails.sid=s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI; Path=/; HttpOnly"
                  }
                ],
                "body": "{\"valid\":true}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": "2038-01-18T21:44:07.000Z",
                    "domain": "postman-echo.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "value": "s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI"
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "95c9fb82-0aee-4190-9a4e-184bbce13f2b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say whether request query time is valid\", function () {",
                    "    pm.response.to.have.jsonBody('valid', true);",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "c0a0f0e2-d1f8-46db-a781-4cf0f787ffab",
            "name": "Format timestamp",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/format` to convert the timestamp to any desired valid format.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `format` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  format: \"formatted-timestamp\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "format"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "format",
                    "value": "mm"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "11d15d25-a798-45cb-96c1-fe20d5222720",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say whether request query time is valid\", function () {",
                    "    pm.response.to.have.jsonBody('format', '20');",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "edd63a41-0f4f-4f21-9ab8-1c1b2042ac43",
            "name": "Extract timestamp unit",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/unit` to extract the specified timestamp unit (as provided in the `unit` query parameter). The default unit returned is the `year`.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `unit` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  unit: \"extracted-timestamp-unit\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "unit"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "unit",
                    "value": "day"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "66d2beba-e426-4ed9-bded-a139c35cbcd8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say whether request query unit is valid\", function () {",
                    "    pm.response.to.have.jsonBody('unit', 1);",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "1b338b69-0e16-43f2-84f7-0b14816e6f29",
            "name": "Time addition",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/add` to add units of time to the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `sum` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  sum: \"sum of (provided / current) and provided timestamps\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "add"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "years",
                    "value": "100"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4e828d64-4b64-4466-bc7c-9a5c699672c1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should return the added years\", function () {",
                    "    pm.response.to.have.jsonBody('sum', 'Sat Oct 10 2116 00:00:00 GMT+0000');",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "774db29d-e9de-4b90-a98d-4fb07d8bd009",
            "name": "Time subtraction",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/subtract` to subtract units of time from the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `difference` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  difference: \"difference between (provided / current) and provided timestamps\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "subtract"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "years",
                    "value": "50"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9550a90d-dd15-4869-a6fe-1daa80078770",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should return the subtracted years\", function () {",
                    "    pm.response.to.have.jsonBody('difference', 'Mon Oct 10 1966 00:00:00 GMT+0000');",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "512fd492-c765-4c66-846b-07a0a3ac37e3",
            "name": "Start of time",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/start` to return a relative timstamp in the past from the specified / current timestamp (as provided in the `unit` query parameter).\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `start` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  start: \"A timestamp from the past, depending on the `unit` specified\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "start"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "unit",
                    "value": "month"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "616a5e16-819c-49bf-b9bc-5c797bce0ec4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should return the beginning of month\", function () {",
                    "    pm.response.to.have.jsonBody('start', 'Sat Oct 01 2016 00:00:00 GMT+0000');",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "cb9c451c-5e84-48e0-ba76-81cfb0771b4e",
            "name": "Object representation",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/object` to return the current / provided timestamp as a JSON object.\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  years: 2016,\n  months: 10,\n  days: 10,\n  hours: 23,\n  minutes: 34,\n  seconds: 20,\n  milliseconds: 980\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "object"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "cc0bf4c8-2325-4e92-85cd-368e4b633f99",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should return the date components\", function () {",
                    "    pm.expect(pm.response.json()).to.eql({",
                    "        \"years\": 2016,",
                    "        \"months\": 9,",
                    "        \"date\": 10,",
                    "        ",
                    "        \"hours\": 0,",
                    "        \"minutes\": 0,",
                    "        \"seconds\": 0,",
                    "        \"milliseconds\": 0",
                    "    });",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "e82d0f75-d1cd-4c50-8ded-569f00ae5502",
            "name": "Before comparisons",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/before` to check if the provided timestamps is before a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `before` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  before: true/false\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "before"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "target",
                    "value": "2017-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8605125c-d19a-4669-8967-369e9f5e8afe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say timestamp is before target\", function () {",
                    "    pm.response.to.have.jsonBody('before', true);",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "8105d52e-cac6-43c0-aad8-f50861563887",
            "name": "After comparisons",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/after` to check if the provided timestamps is after a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `after` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  after: true/false\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "after"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "target",
                    "value": "2017-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "199f932e-8f82-4a92-956f-363d1e00adcf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say timestamp is not after target\", function () {",
                    "    pm.response.to.have.jsonBody('after', false);",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "662a4611-ce62-43b1-b92e-10a415a030bc",
            "name": "Between timestamps",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/between` to check if the provided timestamp is between a range specified by the `start` and `end` query parameters. A resolution limit can also be specified by the `unit` query parameter.\n\nFor instance, for a resolution `unit` of `month`,\n`2016-10-05` does lie between `2016-11-02` and `2016-09-01`.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `between` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  between: true/false\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "between"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "start",
                    "value": "2017-10-10"
                  },
                  {
                    "key": "end",
                    "value": "2019-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7d0ae0c5-5ab8-434d-9385-861a80f71607",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say timestamp is not between start and end\", function () {",
                    "    pm.response.to.have.jsonBody('between', false);",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "id": "e4d85cf7-36e3-4c81-b176-5df52b0016e4",
            "name": "Leap year check",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/leap` to check if the provided/current timestamp belongs to a leap year.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `leap` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  leap: true/false\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "leap"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c77e80cf-08a6-4a54-b14b-157ee3fb9cc5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say timestamp is within leap year\", function () {",
                    "    pm.response.to.have.jsonBody('leap', true);",
                    "});"
                  ]
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9e64d99e-54e8-4701-ac84-95dc74e45864",
        "name": "Auth: Digest",
        "description": {
          "content": "Digest authentication protects an endpoint with a username and password without actually transmitting the password over network.\nOne has to apply a hash function (like MD5, etc) to the username and password before sending them over the network.\n\n> Username: `postman`\n>\n> Password: `password`\n\nUnlike Basic-Auth, authentication happens using two consecutive requests where the first request returns `401 Unauthorised` along with `WWW-Authenticate` header containing information that needs to be used to authenticate subsequent calls.\n\nTo know more about digest authentication, refer to the [Digest Access Authentication](https://en.wikipedia.org/wiki/Digest_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#digest-auth) elaborates how to use the same within the Postman app.",
          "type": "text/plain"
        },
        "item": [
          {
            "id": "d80fcc46-db1c-492d-a5f0-cce3114d3f8f",
            "name": "DigestAuth Request",
            "request": {
              "description": {
                "content": "Performing a simple `GET` request to this endpoint returns status code `401 Unauthorized` with `WWW-Authenticate` header containing information to successfully authenticate subsequent requests.\nThe `WWW-Authenticate` header must be processed to extract `realm` and `nonce` values to hash subsequent requests.\n\nWhen this request is executed within Postman, the script attached with this request does the hard work of extracting realm and nonce from the header and set it as [global variables](https://www.getpostman.com/docs/environments#global-variables?source=echo-collection-app-onboarding) named `echo_digest_nonce` and `echo_digest_realm`.\nThese variables are re-used in subsequent request for seamless integration of the two requests.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "digest-auth"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0e6fd480-8f85-4eca-8fda-a8844f7cabb8",
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"response code is 401\"] = responseCode.code === 401;",
                    "tests[\"response has WWW-Authenticate header\"] = (postman.getResponseHeader('WWW-Authenticate'));",
                    "",
                    "var authenticateHeader = postman.getResponseHeader('WWW-Authenticate'),",
                    "    realmStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"realm\")) + 1 ,",
                    "    realmEnd = authenticateHeader.indexOf('\"',realmStart),",
                    "    realm = authenticateHeader.slice(realmStart,realmEnd),",
                    "    nonceStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"nonce\")) + 1,",
                    "    nonceEnd = authenticateHeader.indexOf('\"',nonceStart),",
                    "    nonce = authenticateHeader.slice(nonceStart,nonceEnd);",
                    "    ",
                    "postman.setGlobalVariable('echo_digest_realm', realm);",
                    "postman.setGlobalVariable('echo_digest_nonce', nonce);"
                  ]
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "958acb85-89de-4259-a8a3-0878dd645e89",
      "name": "Postman Echo",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Postman Echo is service you can use to test your REST clients and make sample API calls. It provides endpoints for `GET`, `POST`, `PUT`, various auth mechanisms and other utility endpoints.\n\nThe documentation for the endpoints as well as example responses can be found at [https://postman-echo.com](https://postman-echo.com/?source=echo-collection-app-onboarding)",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "5485330b-9454-4d2d-a326-bdfd8c5dd8b8",
    "values": []
  },
  "globals": {
    "id": "931626a4-f4c3-4cca-9361-59dac4bac5b3",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 15,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 201.83333333333334,
      "responseMin": 112,
      "responseMax": 600,
      "responseSd": 178.45953478465518,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1617782999152,
      "completed": 1617783001257
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 2,
          "cycles": 3,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a2f252be-9b65-4acf-85e2-7f61b4a62ccc",
          "httpRequestId": "3678cc81-e086-4aa8-a3ad-c8d63a4e3b63"
        },
        "item": {
          "id": "fbc95dff-f986-4f97-8cf5-329731d53469",
          "name": "Request Headers",
          "request": {
            "description": {
              "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "headers"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "my-sample-header",
                "value": "Lorem ipsum dolor sit amet"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3b713255-29ea-4435-b380-ea71c6f8be21",
              "name": "my-sample-header",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "headers"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "my-sample-header",
                    "value": "Lorem ipsum dolor sit amet"
                  }
                ],
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "342"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:14:00 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\n    \"headers\": {\n        \"host\": \"echo.getpostman.com\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate, sdch\",\n        \"accept-language\": \"en-US,en;q=0.8\",\n        \"cache-control\": \"no-cache\",\n        \"my-sample-header\": \"Lorem ipsum dolor sit amet\",\n        \"postman-token\": \"3c8ea80b-f599-fba6-e0b4-a0910440e7b6\",\n        \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36\",\n        \"x-forwarded-port\": \"443\",\n        \"x-forwarded-proto\": \"https\"\n    }\n}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cc213304-8c2c-4f7a-b2f5-6e38e2659e70",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// we check to ensire that the headers we sent as request is returned as part of",
                  "// the response body. if you change the request headers, make sure to add them",
                  "// to the tests here",
                  "pm.test(\"sample request header should be returned in response body\", function () {",
                  "    pm.response.to.have.jsonBody('headers.my-sample-header', 'Lorem ipsum dolor sit amet');",
                  "});"
                ],
                "_lastExecutionId": "11499122-af3c-44d3-bcde-5229728bf895"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "headers"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "my-sample-header",
              "value": "Lorem ipsum dolor sit amet"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "56ce06e5-c694-48ff-94da-b95aa81323e5",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "34c0f5d7-c7e4-4e2e-9b01-63fbca099f41",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 08:09:58 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "373"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"175-9iPaCTLmrrBHccye3peyVtuZv4k\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AeuI7mMLWBQ0xqSGVxeSyStUoCtZLdJEs.7MOxfletYk6w%2FSu7xu3w15WDO7e%2B%2FCZD0rtPf2yNZ3g; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              54,
              56,
              100,
              54,
              45,
              49,
              56,
              53,
              99,
              49,
              102,
              98,
              52,
              50,
              97,
              101,
              55,
              102,
              99,
              51,
              55,
              50,
              53,
              101,
              101,
              102,
              55,
              101,
              49,
              34,
              44,
              34,
              109,
              121,
              45,
              115,
              97,
              109,
              112,
              108,
              101,
              45,
              104,
              101,
              97,
              100,
              101,
              114,
              34,
              58,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              52,
              46,
              49,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              53,
              54,
              99,
              101,
              48,
              54,
              101,
              53,
              45,
              99,
              54,
              57,
              52,
              45,
              52,
              56,
              102,
              102,
              45,
              57,
              52,
              100,
              97,
              45,
              98,
              57,
              53,
              97,
              97,
              56,
              49,
              51,
              50,
              51,
              101,
              53,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 600,
          "responseSize": 373
        },
        "id": "fbc95dff-f986-4f97-8cf5-329731d53469",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "sample request header should be returned in response body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "75e6ce6e-7f19-4fa0-8729-025defb41899",
          "length": 2,
          "cycles": 3,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6c45b0a1-066c-421f-9ab0-e4c2b583f3a0"
        },
        "item": {
          "id": "2049318e-7d54-4d43-a8d6-d361859f11b5",
          "name": "Response Headers",
          "request": {
            "description": {
              "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "response-headers"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "html"
              },
              "id": "2f090f36-c3d9-4813-b776-3e9d1c2538ee",
              "name": "Response headers",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "response-headers"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "Content-Type",
                      "value": "text/html"
                    },
                    {
                      "key": "test",
                      "value": "response_headers"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "71"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "text/html; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:14:18 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                },
                {
                  "name": "test",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "test",
                  "value": "response_headers"
                }
              ],
              "body": "{\"Content-Type\":\"text/html\",\"test\":\"response_headers\"}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "310aff00-42a1-4fda-b397-33cfa38b15a7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has the headers sent as part of request query\", function () {",
                  "    pm.response.to.have.header('foo1', 'bar1')",
                  "        .and.have.header('foo2', 'bar2');",
                  "});",
                  "",
                  "pm.test(\"sample request param should be returned in response body\", function () {",
                  "    pm.response.to.have.jsonBody('foo1', 'bar1')",
                  "        .and.have.jsonBody('foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "9a289b7d-725c-4d0a-acf0-dba31d0650e1"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "response-headers"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a132be87-5bae-43c7-9bc7-d5df0a754e51",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AeuI7mMLWBQ0xqSGVxeSyStUoCtZLdJEs.7MOxfletYk6w%2FSu7xu3w15WDO7e%2B%2FCZD0rtPf2yNZ3g",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "8021844e-f0b3-4dbc-a3c3-18c46e3610f6",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 08:09:58 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "foo1",
              "value": "bar1"
            },
            {
              "key": "foo2",
              "value": "bar2"
            },
            {
              "key": "ETag",
              "value": "W/\"1d-PgOLWVqd2mMvcpNzTF0Cfy4hftg\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ACh-c_ddj4P6px_n0Xck3hKMupX7NBLHU.FimdV7904JC3BYRRuHsp%2FqdRFcBLsaeZNlt0d6P9SXk; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 123,
          "responseSize": 29
        },
        "id": "2049318e-7d54-4d43-a8d6-d361859f11b5",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has the headers sent as part of request query",
            "skipped": false
          },
          {
            "assertion": "sample request param should be returned in response body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "fa38f4b1-a1b5-40bb-b496-ef0cbbc4de2b",
          "length": 2,
          "cycles": 3,
          "position": 0,
          "iteration": 1,
          "cr": true,
          "httpRequestId": "327e843b-9c78-486f-b47c-64dede2d0e66"
        },
        "item": {
          "id": "fbc95dff-f986-4f97-8cf5-329731d53469",
          "name": "Request Headers",
          "request": {
            "description": {
              "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "headers"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "my-sample-header",
                "value": "Lorem ipsum dolor sit amet"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3b713255-29ea-4435-b380-ea71c6f8be21",
              "name": "my-sample-header",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "headers"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "my-sample-header",
                    "value": "Lorem ipsum dolor sit amet"
                  }
                ],
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "342"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:14:00 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\n    \"headers\": {\n        \"host\": \"echo.getpostman.com\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate, sdch\",\n        \"accept-language\": \"en-US,en;q=0.8\",\n        \"cache-control\": \"no-cache\",\n        \"my-sample-header\": \"Lorem ipsum dolor sit amet\",\n        \"postman-token\": \"3c8ea80b-f599-fba6-e0b4-a0910440e7b6\",\n        \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36\",\n        \"x-forwarded-port\": \"443\",\n        \"x-forwarded-proto\": \"https\"\n    }\n}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cc213304-8c2c-4f7a-b2f5-6e38e2659e70",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// we check to ensire that the headers we sent as request is returned as part of",
                  "// the response body. if you change the request headers, make sure to add them",
                  "// to the tests here",
                  "pm.test(\"sample request header should be returned in response body\", function () {",
                  "    pm.response.to.have.jsonBody('headers.my-sample-header', 'Lorem ipsum dolor sit amet');",
                  "});"
                ],
                "_lastExecutionId": "11499122-af3c-44d3-bcde-5229728bf895"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "headers"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "my-sample-header",
              "value": "Lorem ipsum dolor sit amet"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d70b96f3-0d42-46e3-b182-331f3c135b39",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3ACh-c_ddj4P6px_n0Xck3hKMupX7NBLHU.FimdV7904JC3BYRRuHsp%2FqdRFcBLsaeZNlt0d6P9SXk",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "897ee801-2972-4361-bc40-243996f9bca9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 08:09:58 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "477"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"1dd-X3PeBvxz6HTRfFuNE01EsgAVZTw\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AsLcBzJzA8pygcQjr4_PUXQBxy3qf4cTQ.sVWooYXEA4J3obRrg8JhqenbayjyXT%2B7vqcjJgK0Bmk; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              54,
              56,
              100,
              54,
              45,
              48,
              53,
              54,
              51,
              54,
              102,
              98,
              48,
              53,
              101,
              98,
              102,
              56,
              48,
              55,
              49,
              48,
              97,
              54,
              53,
              50,
              102,
              50,
              54,
              34,
              44,
              34,
              109,
              121,
              45,
              115,
              97,
              109,
              112,
              108,
              101,
              45,
              104,
              101,
              97,
              100,
              101,
              114,
              34,
              58,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              52,
              46,
              49,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              100,
              55,
              48,
              98,
              57,
              54,
              102,
              51,
              45,
              48,
              100,
              52,
              50,
              45,
              52,
              54,
              101,
              51,
              45,
              98,
              49,
              56,
              50,
              45,
              51,
              51,
              49,
              102,
              51,
              99,
              49,
              51,
              53,
              98,
              51,
              57,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              67,
              104,
              45,
              99,
              95,
              100,
              100,
              106,
              52,
              80,
              54,
              112,
              120,
              95,
              110,
              48,
              88,
              99,
              107,
              51,
              104,
              75,
              77,
              117,
              112,
              88,
              55,
              78,
              66,
              76,
              72,
              85,
              46,
              70,
              105,
              109,
              100,
              86,
              55,
              57,
              48,
              52,
              74,
              67,
              51,
              66,
              89,
              82,
              82,
              117,
              72,
              115,
              112,
              37,
              50,
              70,
              113,
              100,
              82,
              70,
              99,
              66,
              76,
              115,
              97,
              101,
              90,
              78,
              108,
              116,
              48,
              100,
              54,
              80,
              57,
              83,
              88,
              107,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 116,
          "responseSize": 477
        },
        "id": "fbc95dff-f986-4f97-8cf5-329731d53469",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "sample request header should be returned in response body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "89cfbcd4-4742-4d26-ab2f-ce1cf6a322c5",
          "length": 2,
          "cycles": 3,
          "position": 1,
          "iteration": 1,
          "httpRequestId": "3d67270c-aa9f-4ced-aaef-455327a8237e"
        },
        "item": {
          "id": "2049318e-7d54-4d43-a8d6-d361859f11b5",
          "name": "Response Headers",
          "request": {
            "description": {
              "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "response-headers"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "html"
              },
              "id": "2f090f36-c3d9-4813-b776-3e9d1c2538ee",
              "name": "Response headers",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "response-headers"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "Content-Type",
                      "value": "text/html"
                    },
                    {
                      "key": "test",
                      "value": "response_headers"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "71"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "text/html; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:14:18 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                },
                {
                  "name": "test",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "test",
                  "value": "response_headers"
                }
              ],
              "body": "{\"Content-Type\":\"text/html\",\"test\":\"response_headers\"}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "310aff00-42a1-4fda-b397-33cfa38b15a7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has the headers sent as part of request query\", function () {",
                  "    pm.response.to.have.header('foo1', 'bar1')",
                  "        .and.have.header('foo2', 'bar2');",
                  "});",
                  "",
                  "pm.test(\"sample request param should be returned in response body\", function () {",
                  "    pm.response.to.have.jsonBody('foo1', 'bar1')",
                  "        .and.have.jsonBody('foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "9a289b7d-725c-4d0a-acf0-dba31d0650e1"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "response-headers"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b53afd9d-4bd1-4204-b5e9-8bdaa89b4952",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AsLcBzJzA8pygcQjr4_PUXQBxy3qf4cTQ.sVWooYXEA4J3obRrg8JhqenbayjyXT%2B7vqcjJgK0Bmk",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "86dbea05-b97b-4a89-96fd-1ad0b569c585",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 08:09:59 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "foo1",
              "value": "bar1"
            },
            {
              "key": "foo2",
              "value": "bar2"
            },
            {
              "key": "ETag",
              "value": "W/\"1d-PgOLWVqd2mMvcpNzTF0Cfy4hftg\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A-1Q7gtEBivhVcc7qC09YyFhZtCDX7mag.a4R62nN7ky27Q%2BkZDvyd6yabUcryg0ODMxAzyE2n7qA; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 147,
          "responseSize": 29
        },
        "id": "2049318e-7d54-4d43-a8d6-d361859f11b5",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has the headers sent as part of request query",
            "skipped": false
          },
          {
            "assertion": "sample request param should be returned in response body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "48eb37b9-8ac4-4911-9be4-d21a09ecc12c",
          "length": 2,
          "cycles": 3,
          "position": 0,
          "iteration": 2,
          "cr": true,
          "httpRequestId": "3d3f4e11-80ad-4f03-a8c9-e792a41e6251"
        },
        "item": {
          "id": "fbc95dff-f986-4f97-8cf5-329731d53469",
          "name": "Request Headers",
          "request": {
            "description": {
              "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "headers"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "my-sample-header",
                "value": "Lorem ipsum dolor sit amet"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3b713255-29ea-4435-b380-ea71c6f8be21",
              "name": "my-sample-header",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "headers"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "my-sample-header",
                    "value": "Lorem ipsum dolor sit amet"
                  }
                ],
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "342"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:14:00 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\n    \"headers\": {\n        \"host\": \"echo.getpostman.com\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate, sdch\",\n        \"accept-language\": \"en-US,en;q=0.8\",\n        \"cache-control\": \"no-cache\",\n        \"my-sample-header\": \"Lorem ipsum dolor sit amet\",\n        \"postman-token\": \"3c8ea80b-f599-fba6-e0b4-a0910440e7b6\",\n        \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36\",\n        \"x-forwarded-port\": \"443\",\n        \"x-forwarded-proto\": \"https\"\n    }\n}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cc213304-8c2c-4f7a-b2f5-6e38e2659e70",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// we check to ensire that the headers we sent as request is returned as part of",
                  "// the response body. if you change the request headers, make sure to add them",
                  "// to the tests here",
                  "pm.test(\"sample request header should be returned in response body\", function () {",
                  "    pm.response.to.have.jsonBody('headers.my-sample-header', 'Lorem ipsum dolor sit amet');",
                  "});"
                ],
                "_lastExecutionId": "11499122-af3c-44d3-bcde-5229728bf895"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "headers"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "my-sample-header",
              "value": "Lorem ipsum dolor sit amet"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1596a071-1326-4bc1-8c5f-35cf03059ab6",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3A-1Q7gtEBivhVcc7qC09YyFhZtCDX7mag.a4R62nN7ky27Q%2BkZDvyd6yabUcryg0ODMxAzyE2n7qA",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "9111a979-c143-4053-a2b4-96339be547a5",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 08:09:59 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "477"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"1dd-kFRXAu4d9KvA8LV6SdBHcHl0Xto\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AorkDnLLATF_XpmaPQcNEaprwRMORnVsA.b26AcwuyuW81DbTcLMrhpZxrTvCsRr8v3gfUF1V%2FOGI; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              54,
              56,
              100,
              55,
              45,
              49,
              53,
              57,
              55,
              52,
              102,
              101,
              48,
              52,
              102,
              57,
              49,
              98,
              100,
              54,
              50,
              51,
              52,
              49,
              50,
              100,
              98,
              51,
              55,
              34,
              44,
              34,
              109,
              121,
              45,
              115,
              97,
              109,
              112,
              108,
              101,
              45,
              104,
              101,
              97,
              100,
              101,
              114,
              34,
              58,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              52,
              46,
              49,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              49,
              53,
              57,
              54,
              97,
              48,
              55,
              49,
              45,
              49,
              51,
              50,
              54,
              45,
              52,
              98,
              99,
              49,
              45,
              56,
              99,
              53,
              102,
              45,
              51,
              53,
              99,
              102,
              48,
              51,
              48,
              53,
              57,
              97,
              98,
              54,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              45,
              49,
              81,
              55,
              103,
              116,
              69,
              66,
              105,
              118,
              104,
              86,
              99,
              99,
              55,
              113,
              67,
              48,
              57,
              89,
              121,
              70,
              104,
              90,
              116,
              67,
              68,
              88,
              55,
              109,
              97,
              103,
              46,
              97,
              52,
              82,
              54,
              50,
              110,
              78,
              55,
              107,
              121,
              50,
              55,
              81,
              37,
              50,
              66,
              107,
              90,
              68,
              118,
              121,
              100,
              54,
              121,
              97,
              98,
              85,
              99,
              114,
              121,
              103,
              48,
              79,
              68,
              77,
              120,
              65,
              122,
              121,
              69,
              50,
              110,
              55,
              113,
              65,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 113,
          "responseSize": 477
        },
        "id": "fbc95dff-f986-4f97-8cf5-329731d53469",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "sample request header should be returned in response body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0dff2ad7-e92d-4ffb-99a0-2622a13fe41d",
          "length": 2,
          "cycles": 3,
          "position": 1,
          "iteration": 2,
          "httpRequestId": "1f498342-52ff-4e3c-b262-e30d6def4818"
        },
        "item": {
          "id": "2049318e-7d54-4d43-a8d6-d361859f11b5",
          "name": "Response Headers",
          "request": {
            "description": {
              "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "response-headers"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "html"
              },
              "id": "2f090f36-c3d9-4813-b776-3e9d1c2538ee",
              "name": "Response headers",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "response-headers"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "Content-Type",
                      "value": "text/html"
                    },
                    {
                      "key": "test",
                      "value": "response_headers"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "71"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "text/html; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:14:18 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                },
                {
                  "name": "test",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "test",
                  "value": "response_headers"
                }
              ],
              "body": "{\"Content-Type\":\"text/html\",\"test\":\"response_headers\"}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "310aff00-42a1-4fda-b397-33cfa38b15a7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has the headers sent as part of request query\", function () {",
                  "    pm.response.to.have.header('foo1', 'bar1')",
                  "        .and.have.header('foo2', 'bar2');",
                  "});",
                  "",
                  "pm.test(\"sample request param should be returned in response body\", function () {",
                  "    pm.response.to.have.jsonBody('foo1', 'bar1')",
                  "        .and.have.jsonBody('foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "9a289b7d-725c-4d0a-acf0-dba31d0650e1"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "response-headers"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "64b699d1-c541-40f2-94fb-a9cc836a0467",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AorkDnLLATF_XpmaPQcNEaprwRMORnVsA.b26AcwuyuW81DbTcLMrhpZxrTvCsRr8v3gfUF1V%2FOGI",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "e4a613ac-69c3-4b01-bc7c-58b98f849c8d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 08:09:59 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "foo1",
              "value": "bar1"
            },
            {
              "key": "foo2",
              "value": "bar2"
            },
            {
              "key": "ETag",
              "value": "W/\"1d-PgOLWVqd2mMvcpNzTF0Cfy4hftg\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AW3nZTbieg_UvxdPAVW_c1nBIQNrMa0X6.rCl%2F0clbiInDSBWPDwdkWByqd4EWDATa0MzvVRCOKA8; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 112,
          "responseSize": 29
        },
        "id": "2049318e-7d54-4d43-a8d6-d361859f11b5",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has the headers sent as part of request query",
            "skipped": false
          },
          {
            "assertion": "sample request param should be returned in response body",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 1414
    },
    "failures": [],
    "error": null
  }
}